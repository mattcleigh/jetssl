; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3d4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %7 = shl i32 %6, 1, !dbg !10
  %8 = and i32 %7, 254, !dbg !10
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !11
  %10 = shl i32 %9, 8, !dbg !12
  %11 = or i32 %10, %8, !dbg !13
  %12 = or i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %11, %4, !dbg !14
  %14 = icmp slt i32 %12, %4, !dbg !14
  %15 = sext i32 %11 to i64, !dbg !15
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !15
  %17 = sext i32 %12 to i64, !dbg !15
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !15
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %13) #3, !dbg !16
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %14) #3, !dbg !16
  %21 = getelementptr half, ptr addrspace(1) %1, i64 %15, !dbg !17
  %22 = getelementptr half, ptr addrspace(1) %1, i64 %17, !dbg !17
  %23 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %21, i1 %13) #3, !dbg !18
  %24 = bitcast i16 %23 to half, !dbg !18
  %25 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %22, i1 %14) #3, !dbg !18
  %26 = bitcast i16 %25 to half, !dbg !18
  %27 = fpext half %24 to float, !dbg !19
  %28 = fpext half %26 to float, !dbg !19
  %29 = fsub float 0.000000e+00, %27, !dbg !20
  %30 = fsub float 0.000000e+00, %28, !dbg !20
  %.inv = fcmp ole float %29, 0.000000e+00, !dbg !21
  %31 = select i1 %.inv, float 0.000000e+00, float %29, !dbg !21
  %.inv1 = fcmp ole float %30, 0.000000e+00, !dbg !21
  %32 = select i1 %.inv1, float 0.000000e+00, float %30, !dbg !21
  %33 = fsub float 0.000000e+00, %31, !dbg !25
  %34 = fsub float 0.000000e+00, %32, !dbg !25
  %35 = fmul float %33, 0x3FF7154760000000, !dbg !26
  %36 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %35) #3, !dbg !26
  %37 = fmul float %34, 0x3FF7154760000000, !dbg !26
  %38 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %37) #3, !dbg !26
  %39 = fsub float %29, %31, !dbg !27
  %40 = fsub float %30, %32, !dbg !27
  %41 = fmul float %39, 0x3FF7154760000000, !dbg !28
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #3, !dbg !28
  %43 = fmul float %40, 0x3FF7154760000000, !dbg !28
  %44 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %43) #3, !dbg !28
  %45 = fadd float %36, %42, !dbg !29
  %46 = fadd float %38, %44, !dbg !29
  %47 = fcmp olt float %45, 0x3810000000000000, !dbg !30
  %48 = fmul float %45, 0x4160000000000000, !dbg !30
  %.02.i = select i1 %47, float %48, float %45, !dbg !30
  %i.i.0.i = select i1 %47, float -2.300000e+01, float 0.000000e+00, !dbg !30
  %49 = bitcast float %.02.i to i32, !dbg !30
  %50 = add i32 %49, -1059760811, !dbg !30
  %51 = and i32 %50, -8388608, !dbg !30
  %52 = sub i32 %49, %51, !dbg !30
  %53 = bitcast i32 %52 to float, !dbg !30
  %54 = sitofp i32 %51 to float, !dbg !30
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %55, 0, !dbg !30
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %54, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !30
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %54, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !30
  %.08.i = select i1 %.not.i, float %57, float %56, !dbg !30
  %58 = fadd float %53, -1.000000e+00, !dbg !30
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i = icmp eq i32 %59, 0, !dbg !30
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %58, float 0x3FC2073EC0000000) #3, !dbg !30
  %61 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %58, float 0x3FC2073EC0000000) #3, !dbg !30
  %.010.i = select i1 %.not1.i, float %61, float %60, !dbg !30
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i = icmp eq i32 %62, 0, !dbg !30
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %58, float 0xBFBF19B980000000) #3, !dbg !30
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %58, float 0xBFBF19B980000000) #3, !dbg !30
  %.011.i = select i1 %.not2.i, float %64, float %63, !dbg !30
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i = icmp eq i32 %65, 0, !dbg !30
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %58, float 0x3FC1E52AA0000000) #3, !dbg !30
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %58, float 0x3FC1E52AA0000000) #3, !dbg !30
  %.012.i = select i1 %.not3.i, float %67, float %66, !dbg !30
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i = icmp eq i32 %68, 0, !dbg !30
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %58, float 0xBFC55B1720000000) #3, !dbg !30
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %58, float 0xBFC55B1720000000) #3, !dbg !30
  %.09.i = select i1 %.not4.i, float %70, float %69, !dbg !30
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i = icmp eq i32 %71, 0, !dbg !30
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %58, float 0x3FC99DA160000000) #3, !dbg !30
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %58, float 0x3FC99DA160000000) #3, !dbg !30
  %.05.i = select i1 %.not5.i, float %73, float %72, !dbg !30
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i = icmp eq i32 %74, 0, !dbg !30
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %58, float 0xBFCFFFE440000000) #3, !dbg !30
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %58, float 0xBFCFFFE440000000) #3, !dbg !30
  %.01.i = select i1 %.not6.i, float %76, float %75, !dbg !30
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not7.i = icmp eq i32 %77, 0, !dbg !30
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %58, float 0x3FD5554F00000000) #3, !dbg !30
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %58, float 0x3FD5554F00000000) #3, !dbg !30
  %.0.i = select i1 %.not7.i, float %79, float %78, !dbg !30
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not8.i = icmp eq i32 %80, 0, !dbg !30
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %58, float -5.000000e-01) #3, !dbg !30
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %58, float -5.000000e-01) #3, !dbg !30
  %.07.i = select i1 %.not8.i, float %82, float %81, !dbg !30
  %83 = fmul float %58, %.07.i, !dbg !30
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not9.i = icmp eq i32 %84, 0, !dbg !30
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %83, float %58, float %58) #3, !dbg !30
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %83, float %58, float %58) #3, !dbg !30
  %.06.i = select i1 %.not9.i, float %86, float %85, !dbg !30
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not10.i = icmp eq i32 %87, 0, !dbg !30
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !30
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !30
  %.04.i = select i1 %.not10.i, float %89, float %88, !dbg !30
  %90 = icmp ugt i32 %49, 2139095039, !dbg !30
  br i1 %90, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !30

__nv_fmaf_rn.exit.i.i:                            ; preds = %5
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not11.i = icmp eq i32 %91, 0, !dbg !30
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !30
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !30
  %.03.i = select i1 %.not11.i, float %93, float %92, !dbg !30
  br label %__nv_logf.exit, !dbg !30

__nv_logf.exit:                                   ; preds = %5, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %5 ], !dbg !30
  %94 = fcmp olt float %46, 0x3810000000000000, !dbg !30
  %95 = fmul float %46, 0x4160000000000000, !dbg !30
  %.02.i2 = select i1 %94, float %95, float %46, !dbg !30
  %i.i.0.i3 = select i1 %94, float -2.300000e+01, float 0.000000e+00, !dbg !30
  %96 = bitcast float %.02.i2 to i32, !dbg !30
  %97 = add i32 %96, -1059760811, !dbg !30
  %98 = and i32 %97, -8388608, !dbg !30
  %99 = sub i32 %96, %98, !dbg !30
  %100 = bitcast i32 %99 to float, !dbg !30
  %101 = sitofp i32 %98 to float, !dbg !30
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i4 = icmp eq i32 %102, 0, !dbg !30
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %101, float 0x3E80000000000000, float %i.i.0.i3) #3, !dbg !30
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %101, float 0x3E80000000000000, float %i.i.0.i3) #3, !dbg !30
  %.08.i5 = select i1 %.not.i4, float %104, float %103, !dbg !30
  %105 = fadd float %100, -1.000000e+00, !dbg !30
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i6 = icmp eq i32 %106, 0, !dbg !30
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %105, float 0x3FC2073EC0000000) #3, !dbg !30
  %108 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %105, float 0x3FC2073EC0000000) #3, !dbg !30
  %.010.i7 = select i1 %.not1.i6, float %108, float %107, !dbg !30
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i8 = icmp eq i32 %109, 0, !dbg !30
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i7, float %105, float 0xBFBF19B980000000) #3, !dbg !30
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i7, float %105, float 0xBFBF19B980000000) #3, !dbg !30
  %.011.i9 = select i1 %.not2.i8, float %111, float %110, !dbg !30
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i10 = icmp eq i32 %112, 0, !dbg !30
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i9, float %105, float 0x3FC1E52AA0000000) #3, !dbg !30
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i9, float %105, float 0x3FC1E52AA0000000) #3, !dbg !30
  %.012.i11 = select i1 %.not3.i10, float %114, float %113, !dbg !30
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i12 = icmp eq i32 %115, 0, !dbg !30
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i11, float %105, float 0xBFC55B1720000000) #3, !dbg !30
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i11, float %105, float 0xBFC55B1720000000) #3, !dbg !30
  %.09.i13 = select i1 %.not4.i12, float %117, float %116, !dbg !30
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i14 = icmp eq i32 %118, 0, !dbg !30
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i13, float %105, float 0x3FC99DA160000000) #3, !dbg !30
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i13, float %105, float 0x3FC99DA160000000) #3, !dbg !30
  %.05.i15 = select i1 %.not5.i14, float %120, float %119, !dbg !30
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i16 = icmp eq i32 %121, 0, !dbg !30
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i15, float %105, float 0xBFCFFFE440000000) #3, !dbg !30
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i15, float %105, float 0xBFCFFFE440000000) #3, !dbg !30
  %.01.i17 = select i1 %.not6.i16, float %123, float %122, !dbg !30
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not7.i18 = icmp eq i32 %124, 0, !dbg !30
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i17, float %105, float 0x3FD5554F00000000) #3, !dbg !30
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i17, float %105, float 0x3FD5554F00000000) #3, !dbg !30
  %.0.i19 = select i1 %.not7.i18, float %126, float %125, !dbg !30
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not8.i20 = icmp eq i32 %127, 0, !dbg !30
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i19, float %105, float -5.000000e-01) #3, !dbg !30
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i19, float %105, float -5.000000e-01) #3, !dbg !30
  %.07.i21 = select i1 %.not8.i20, float %129, float %128, !dbg !30
  %130 = fmul float %105, %.07.i21, !dbg !30
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not9.i22 = icmp eq i32 %131, 0, !dbg !30
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %130, float %105, float %105) #3, !dbg !30
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %130, float %105, float %105) #3, !dbg !30
  %.06.i23 = select i1 %.not9.i22, float %133, float %132, !dbg !30
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not10.i24 = icmp eq i32 %134, 0, !dbg !30
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i5, float 0x3FE62E4300000000, float %.06.i23) #3, !dbg !30
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i5, float 0x3FE62E4300000000, float %.06.i23) #3, !dbg !30
  %.04.i25 = select i1 %.not10.i24, float %136, float %135, !dbg !30
  %137 = icmp ugt i32 %96, 2139095039, !dbg !30
  br i1 %137, label %__nv_fmaf_rn.exit.i.i28, label %__nv_logf.exit31, !dbg !30

__nv_fmaf_rn.exit.i.i28:                          ; preds = %__nv_logf.exit
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not11.i29 = icmp eq i32 %138, 0, !dbg !30
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i2, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !30
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i2, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !30
  %.03.i30 = select i1 %.not11.i29, float %140, float %139, !dbg !30
  br label %__nv_logf.exit31, !dbg !30

__nv_logf.exit31:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i28
  %r.i.0.i26 = phi float [ %.03.i30, %__nv_fmaf_rn.exit.i.i28 ], [ %.04.i25, %__nv_logf.exit ], !dbg !30
  %141 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !30
  %r.i.1.i = select i1 %141, float 0xFFF0000000000000, float %r.i.0.i, !dbg !30
  %142 = bitcast i32 %20 to float, !dbg !16
  %143 = fsub float 1.000000e+00, %142, !dbg !31
  %144 = fmul float %143, %28, !dbg !32
  %145 = fadd float %144, %32, !dbg !33
  %146 = bitcast i32 %19 to float, !dbg !16
  %147 = fsub float 1.000000e+00, %146, !dbg !31
  %148 = fmul float %147, %27, !dbg !32
  %149 = fadd float %148, %31, !dbg !33
  %150 = fcmp oeq float %.02.i2, 0.000000e+00, !dbg !30
  %r.i.1.i27 = select i1 %150, float 0xFFF0000000000000, float %r.i.0.i26, !dbg !30
  %151 = fadd float %149, %r.i.1.i, !dbg !34
  %152 = fadd float %145, %r.i.1.i27, !dbg !34
  %153 = fmul float %29, 0x3FF7154760000000, !dbg !35
  %154 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %153) #3, !dbg !35
  %155 = fmul float %30, 0x3FF7154760000000, !dbg !35
  %156 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %155) #3, !dbg !35
  %157 = fadd float %154, 1.000000e+00, !dbg !39
  %158 = fadd float %156, 1.000000e+00, !dbg !39
  %159 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %157) #3, !dbg !40
  %160 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %158) #3, !dbg !40
  %161 = fmul float %159, %146, !dbg !41
  %162 = fmul float %160, %142, !dbg !41
  %163 = fsub float 1.000000e+00, %159, !dbg !42
  %164 = fsub float 1.000000e+00, %160, !dbg !42
  %165 = fmul float %147, %163, !dbg !43
  %166 = fmul float %143, %164, !dbg !43
  %167 = fadd float %161, %165, !dbg !44
  %168 = fadd float %162, %166, !dbg !44
  %169 = fsub float 1.000000e+00, %167, !dbg !45
  %170 = fsub float 1.000000e+00, %168, !dbg !45
  %171 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !46
  %172 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !46
  %173 = bitcast float %151 to i32, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %173, ptr addrspace(1) %171, i1 %13) #3, !dbg !47
  %174 = bitcast float %152 to i32, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %174, ptr addrspace(1) %172, i1 %14) #3, !dbg !47
  %175 = getelementptr float, ptr addrspace(1) %3, i64 %15, !dbg !48
  %176 = getelementptr float, ptr addrspace(1) %3, i64 %17, !dbg !48
  %177 = bitcast float %169 to i32, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %177, ptr addrspace(1) %175, i1 %13) #3, !dbg !49
  %178 = bitcast float %170 to i32, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %178, ptr addrspace(1) %176, i1 %14) #3, !dbg !49
  ret void, !dbg !50
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: alwaysinline nounwind
define float @__nv_logf(float %a) local_unnamed_addr #1 {
__nv_fmaf_rn.exit10.i:
  %0 = fcmp olt float %a, 0x3810000000000000
  %1 = fmul float %a, 0x4160000000000000
  %.02 = select i1 %0, float %1, float %a
  %i.i.0 = select i1 %0, float -2.300000e+01, float 0.000000e+00
  %2 = bitcast float %.02 to i32
  %3 = add i32 %2, -1059760811
  %4 = and i32 %3, -8388608
  %5 = sub i32 %2, %4
  %6 = bitcast i32 %5 to float
  %7 = sitofp i32 %4 to float
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float 0x3E80000000000000, float %i.i.0) #3
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float 0x3E80000000000000, float %i.i.0) #3
  %.08 = select i1 %.not, float %10, float %9
  %11 = fadd float %6, -1.000000e+00
  %12 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not1 = icmp eq i32 %12, 0
  %13 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %11, float 0x3FC2073EC0000000) #3
  %14 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %11, float 0x3FC2073EC0000000) #3
  %.010 = select i1 %.not1, float %14, float %13
  %15 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not2 = icmp eq i32 %15, 0
  %16 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010, float %11, float 0xBFBF19B980000000) #3
  %17 = tail call float @llvm.nvvm.fma.rn.f(float %.010, float %11, float 0xBFBF19B980000000) #3
  %.011 = select i1 %.not2, float %17, float %16
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not3 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011, float %11, float 0x3FC1E52AA0000000) #3
  %20 = tail call float @llvm.nvvm.fma.rn.f(float %.011, float %11, float 0x3FC1E52AA0000000) #3
  %.012 = select i1 %.not3, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not4 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012, float %11, float 0xBFC55B1720000000) #3
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.012, float %11, float 0xBFC55B1720000000) #3
  %.09 = select i1 %.not4, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not5 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09, float %11, float 0x3FC99DA160000000) #3
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.09, float %11, float 0x3FC99DA160000000) #3
  %.05 = select i1 %.not5, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not6 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %11, float 0xBFCFFFE440000000) #3
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %11, float 0xBFCFFFE440000000) #3
  %.01 = select i1 %.not6, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not7 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01, float %11, float 0x3FD5554F00000000) #3
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.01, float %11, float 0x3FD5554F00000000) #3
  %.0 = select i1 %.not7, float %32, float %31
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not8 = icmp eq i32 %33, 0
  %34 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %11, float -5.000000e-01) #3
  %35 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %11, float -5.000000e-01) #3
  %.07 = select i1 %.not8, float %35, float %34
  %36 = fmul float %11, %.07
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not9 = icmp eq i32 %37, 0
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %36, float %11, float %11) #3
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %36, float %11, float %11) #3
  %.06 = select i1 %.not9, float %39, float %38
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not10 = icmp eq i32 %40, 0
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08, float 0x3FE62E4300000000, float %.06) #3
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %.08, float 0x3FE62E4300000000, float %.06) #3
  %.04 = select i1 %.not10, float %42, float %41
  %43 = icmp ugt i32 %2, 2139095039
  br i1 %43, label %__nv_fmaf_rn.exit.i, label %__internal_accurate_logf.exit

__nv_fmaf_rn.exit.i:                              ; preds = %__nv_fmaf_rn.exit10.i
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not11 = icmp eq i32 %44, 0
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02, float 0x7FF0000000000000, float 0x7FF0000000000000) #3
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %.02, float 0x7FF0000000000000, float 0x7FF0000000000000) #3
  %.03 = select i1 %.not11, float %46, float %45
  br label %__internal_accurate_logf.exit

__internal_accurate_logf.exit:                    ; preds = %__nv_fmaf_rn.exit.i, %__nv_fmaf_rn.exit10.i
  %r.i.0 = phi float [ %.03, %__nv_fmaf_rn.exit.i ], [ %.04, %__nv_fmaf_rn.exit10.i ]
  %47 = fcmp oeq float %.02, 0.000000e+00
  %r.i.1 = select i1 %47, float 0xFFF0000000000000, float %r.i.0
  ret float %r.i.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cirkeik6wgclapl6mxocf7ztuoe52g5n5j4zsm63mf6vwlwzro37.py", directory: "/tmp/torchinductor_leighm/ir")
!4 = !{ptr @triton__0d1d2d3d4, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3d4, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3d4", linkageName: "triton__0d1d2d3d4", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 20, column: 36, scope: !7)
!11 = !DILocation(line: 19, column: 28, scope: !7)
!12 = !DILocation(line: 19, column: 33, scope: !7)
!13 = !DILocation(line: 20, column: 23, scope: !7)
!14 = !DILocation(line: 21, column: 21, scope: !7)
!15 = !DILocation(line: 23, column: 30, scope: !7)
!16 = !DILocation(line: 23, column: 35, scope: !7)
!17 = !DILocation(line: 24, column: 30, scope: !7)
!18 = !DILocation(line: 24, column: 35, scope: !7)
!19 = !DILocation(line: 24, column: 45, scope: !7)
!20 = !DILocation(line: 29, column: 12, scope: !7)
!21 = !DILocation(line: 39, column: 29, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "triton_helpers.py", directory: "/opt/conda/lib/python3.10/site-packages/torch/_inductor")
!24 = !DILocation(line: 31, column: 40, scope: !22)
!25 = !DILocation(line: 33, column: 13, scope: !7)
!26 = !DILocation(line: 34, column: 19, scope: !7)
!27 = !DILocation(line: 35, column: 19, scope: !7)
!28 = !DILocation(line: 36, column: 19, scope: !7)
!29 = !DILocation(line: 37, column: 20, scope: !7)
!30 = !DILocation(line: 38, column: 19, scope: !7)
!31 = !DILocation(line: 26, column: 18, scope: !7)
!32 = !DILocation(line: 28, column: 18, scope: !7)
!33 = !DILocation(line: 32, column: 18, scope: !7)
!34 = !DILocation(line: 39, column: 19, scope: !7)
!35 = !DILocation(line: 27, column: 29, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!37 = !DIFile(filename: "standard.py", directory: "/opt/conda/lib/python3.10/site-packages/triton/language")
!38 = !DILocation(line: 40, column: 23, scope: !36)
!39 = !DILocation(line: 27, column: 20, scope: !36, inlinedAt: !38)
!40 = !DILocation(line: 27, column: 16, scope: !36, inlinedAt: !38)
!41 = !DILocation(line: 41, column: 20, scope: !7)
!42 = !DILocation(line: 42, column: 19, scope: !7)
!43 = !DILocation(line: 43, column: 20, scope: !7)
!44 = !DILocation(line: 44, column: 20, scope: !7)
!45 = !DILocation(line: 45, column: 19, scope: !7)
!46 = !DILocation(line: 46, column: 25, scope: !7)
!47 = !DILocation(line: 46, column: 37, scope: !7)
!48 = !DILocation(line: 47, column: 25, scope: !7)
!49 = !DILocation(line: 47, column: 37, scope: !7)
!50 = !DILocation(line: 47, column: 4, scope: !7)

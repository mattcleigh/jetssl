; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 127, !dbg !10
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !11
  %8 = shl i32 %7, 7, !dbg !12
  %9 = or i32 %8, %6, !dbg !13
  %10 = icmp slt i32 %9, %3, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %10) #3, !dbg !16
  %14 = getelementptr half, ptr addrspace(1) %1, i64 %11, !dbg !17
  %15 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %14, i1 %10) #3, !dbg !18
  %16 = bitcast i16 %15 to half, !dbg !18
  %17 = fpext half %16 to float, !dbg !19
  %18 = fsub float 0.000000e+00, %17, !dbg !20
  %.inv = fcmp ole float %18, 0.000000e+00, !dbg !21
  %19 = select i1 %.inv, float 0.000000e+00, float %18, !dbg !21
  %20 = fsub float 0.000000e+00, %19, !dbg !25
  %21 = fmul float %20, 0x3FF7154760000000, !dbg !26
  %22 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %21) #3, !dbg !26
  %23 = fsub float %18, %19, !dbg !27
  %24 = fmul float %23, 0x3FF7154760000000, !dbg !28
  %25 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %24) #3, !dbg !28
  %26 = fadd float %22, %25, !dbg !29
  %27 = fcmp olt float %26, 0x3810000000000000, !dbg !30
  %28 = fmul float %26, 0x4160000000000000, !dbg !30
  %.02.i = select i1 %27, float %28, float %26, !dbg !30
  %i.i.0.i = select i1 %27, float -2.300000e+01, float 0.000000e+00, !dbg !30
  %29 = bitcast float %.02.i to i32, !dbg !30
  %30 = add i32 %29, -1059760811, !dbg !30
  %31 = and i32 %30, -8388608, !dbg !30
  %32 = sub i32 %29, %31, !dbg !30
  %33 = bitcast i32 %32 to float, !dbg !30
  %34 = sitofp i32 %31 to float, !dbg !30
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %35, 0, !dbg !30
  %36 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %34, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !30
  %37 = tail call float @llvm.nvvm.fma.rn.f(float %34, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !30
  %.08.i = select i1 %.not.i, float %37, float %36, !dbg !30
  %38 = fadd float %33, -1.000000e+00, !dbg !30
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i = icmp eq i32 %39, 0, !dbg !30
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %38, float 0x3FC2073EC0000000) #3, !dbg !30
  %41 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %38, float 0x3FC2073EC0000000) #3, !dbg !30
  %.010.i = select i1 %.not1.i, float %41, float %40, !dbg !30
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i = icmp eq i32 %42, 0, !dbg !30
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %38, float 0xBFBF19B980000000) #3, !dbg !30
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %38, float 0xBFBF19B980000000) #3, !dbg !30
  %.011.i = select i1 %.not2.i, float %44, float %43, !dbg !30
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i = icmp eq i32 %45, 0, !dbg !30
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %38, float 0x3FC1E52AA0000000) #3, !dbg !30
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %38, float 0x3FC1E52AA0000000) #3, !dbg !30
  %.012.i = select i1 %.not3.i, float %47, float %46, !dbg !30
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i = icmp eq i32 %48, 0, !dbg !30
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %38, float 0xBFC55B1720000000) #3, !dbg !30
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %38, float 0xBFC55B1720000000) #3, !dbg !30
  %.09.i = select i1 %.not4.i, float %50, float %49, !dbg !30
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i = icmp eq i32 %51, 0, !dbg !30
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %38, float 0x3FC99DA160000000) #3, !dbg !30
  %53 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %38, float 0x3FC99DA160000000) #3, !dbg !30
  %.05.i = select i1 %.not5.i, float %53, float %52, !dbg !30
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i = icmp eq i32 %54, 0, !dbg !30
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %38, float 0xBFCFFFE440000000) #3, !dbg !30
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %38, float 0xBFCFFFE440000000) #3, !dbg !30
  %.01.i = select i1 %.not6.i, float %56, float %55, !dbg !30
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not7.i = icmp eq i32 %57, 0, !dbg !30
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %38, float 0x3FD5554F00000000) #3, !dbg !30
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %38, float 0x3FD5554F00000000) #3, !dbg !30
  %.0.i = select i1 %.not7.i, float %59, float %58, !dbg !30
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not8.i = icmp eq i32 %60, 0, !dbg !30
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %38, float -5.000000e-01) #3, !dbg !30
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %38, float -5.000000e-01) #3, !dbg !30
  %.07.i = select i1 %.not8.i, float %62, float %61, !dbg !30
  %63 = fmul float %38, %.07.i, !dbg !30
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not9.i = icmp eq i32 %64, 0, !dbg !30
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %63, float %38, float %38) #3, !dbg !30
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %63, float %38, float %38) #3, !dbg !30
  %.06.i = select i1 %.not9.i, float %66, float %65, !dbg !30
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not10.i = icmp eq i32 %67, 0, !dbg !30
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !30
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !30
  %.04.i = select i1 %.not10.i, float %69, float %68, !dbg !30
  %70 = icmp ugt i32 %29, 2139095039, !dbg !30
  br i1 %70, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !30

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not11.i = icmp eq i32 %71, 0, !dbg !30
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !30
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !30
  %.03.i = select i1 %.not11.i, float %73, float %72, !dbg !30
  br label %__nv_logf.exit, !dbg !30

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !30
  %74 = bitcast i32 %13 to float, !dbg !16
  %75 = fsub float 1.000000e+00, %74, !dbg !31
  %76 = fmul float %75, %17, !dbg !32
  %77 = fadd float %76, %19, !dbg !33
  %78 = fmul float %74, 0x3FCC6A7F00000000, !dbg !34
  %79 = fsub float 1.000000e+00, %78, !dbg !35
  %80 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !30
  %r.i.1.i = select i1 %80, float 0xFFF0000000000000, float %r.i.0.i, !dbg !30
  %81 = fadd float %77, %r.i.1.i, !dbg !36
  %82 = fmul float %18, 0x3FF7154760000000, !dbg !37
  %83 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %82) #3, !dbg !37
  %84 = fadd float %83, 1.000000e+00, !dbg !41
  %85 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %84) #3, !dbg !42
  %86 = fmul float %85, %74, !dbg !43
  %87 = fsub float 1.000000e+00, %85, !dbg !44
  %88 = fmul float %75, %87, !dbg !45
  %89 = fadd float %86, %88, !dbg !46
  %90 = fsub float 1.000000e+00, %89, !dbg !47
  %91 = fmul float %90, %90, !dbg !48
  %92 = fmul float %90, %91, !dbg !49
  %93 = fmul float %81, %92, !dbg !50
  %94 = fmul float %79, %93, !dbg !51
  %95 = getelementptr float, ptr addrspace(1) %2, i64 %11, !dbg !52
  %96 = bitcast float %94 to i32, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %96, ptr addrspace(1) %95, i1 %10) #3, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: alwaysinline nounwind
define float @__nv_logf(float %a) local_unnamed_addr #1 {
__nv_fmaf_rn.exit10.i:
  %0 = fcmp olt float %a, 0x3810000000000000
  %1 = fmul float %a, 0x4160000000000000
  %.02 = select i1 %0, float %1, float %a
  %i.i.0 = select i1 %0, float -2.300000e+01, float 0.000000e+00
  %2 = bitcast float %.02 to i32
  %3 = add i32 %2, -1059760811
  %4 = and i32 %3, -8388608
  %5 = sub i32 %2, %4
  %6 = bitcast i32 %5 to float
  %7 = sitofp i32 %4 to float
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float 0x3E80000000000000, float %i.i.0) #3
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float 0x3E80000000000000, float %i.i.0) #3
  %.08 = select i1 %.not, float %10, float %9
  %11 = fadd float %6, -1.000000e+00
  %12 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not1 = icmp eq i32 %12, 0
  %13 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %11, float 0x3FC2073EC0000000) #3
  %14 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %11, float 0x3FC2073EC0000000) #3
  %.010 = select i1 %.not1, float %14, float %13
  %15 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not2 = icmp eq i32 %15, 0
  %16 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010, float %11, float 0xBFBF19B980000000) #3
  %17 = tail call float @llvm.nvvm.fma.rn.f(float %.010, float %11, float 0xBFBF19B980000000) #3
  %.011 = select i1 %.not2, float %17, float %16
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not3 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011, float %11, float 0x3FC1E52AA0000000) #3
  %20 = tail call float @llvm.nvvm.fma.rn.f(float %.011, float %11, float 0x3FC1E52AA0000000) #3
  %.012 = select i1 %.not3, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not4 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012, float %11, float 0xBFC55B1720000000) #3
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.012, float %11, float 0xBFC55B1720000000) #3
  %.09 = select i1 %.not4, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not5 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09, float %11, float 0x3FC99DA160000000) #3
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.09, float %11, float 0x3FC99DA160000000) #3
  %.05 = select i1 %.not5, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not6 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %11, float 0xBFCFFFE440000000) #3
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %11, float 0xBFCFFFE440000000) #3
  %.01 = select i1 %.not6, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not7 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01, float %11, float 0x3FD5554F00000000) #3
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.01, float %11, float 0x3FD5554F00000000) #3
  %.0 = select i1 %.not7, float %32, float %31
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not8 = icmp eq i32 %33, 0
  %34 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %11, float -5.000000e-01) #3
  %35 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %11, float -5.000000e-01) #3
  %.07 = select i1 %.not8, float %35, float %34
  %36 = fmul float %11, %.07
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not9 = icmp eq i32 %37, 0
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %36, float %11, float %11) #3
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %36, float %11, float %11) #3
  %.06 = select i1 %.not9, float %39, float %38
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not10 = icmp eq i32 %40, 0
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08, float 0x3FE62E4300000000, float %.06) #3
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %.08, float 0x3FE62E4300000000, float %.06) #3
  %.04 = select i1 %.not10, float %42, float %41
  %43 = icmp ugt i32 %2, 2139095039
  br i1 %43, label %__nv_fmaf_rn.exit.i, label %__internal_accurate_logf.exit

__nv_fmaf_rn.exit.i:                              ; preds = %__nv_fmaf_rn.exit10.i
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3
  %.not11 = icmp eq i32 %44, 0
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02, float 0x7FF0000000000000, float 0x7FF0000000000000) #3
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %.02, float 0x7FF0000000000000, float 0x7FF0000000000000) #3
  %.03 = select i1 %.not11, float %46, float %45
  br label %__internal_accurate_logf.exit

__internal_accurate_logf.exit:                    ; preds = %__nv_fmaf_rn.exit.i, %__nv_fmaf_rn.exit10.i
  %r.i.0 = phi float [ %.03, %__nv_fmaf_rn.exit.i ], [ %.04, %__nv_fmaf_rn.exit10.i ]
  %47 = fcmp oeq float %.02, 0.000000e+00
  %r.i.1 = select i1 %47, float 0xFFF0000000000000, float %r.i.0
  ret float %r.i.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cva4lf6c7nsq23q32byogduu2wyjmyglwsu43omw3466uzrdwlhl.py", directory: "/tmp/torchinductor_leighm/va")
!4 = !{ptr @triton__0d1d2d3, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3", linkageName: "triton__0d1d2d3", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 20, column: 36, scope: !7)
!11 = !DILocation(line: 19, column: 28, scope: !7)
!12 = !DILocation(line: 19, column: 33, scope: !7)
!13 = !DILocation(line: 20, column: 23, scope: !7)
!14 = !DILocation(line: 21, column: 21, scope: !7)
!15 = !DILocation(line: 23, column: 30, scope: !7)
!16 = !DILocation(line: 23, column: 35, scope: !7)
!17 = !DILocation(line: 24, column: 30, scope: !7)
!18 = !DILocation(line: 24, column: 35, scope: !7)
!19 = !DILocation(line: 24, column: 45, scope: !7)
!20 = !DILocation(line: 32, column: 12, scope: !7)
!21 = !DILocation(line: 39, column: 29, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "triton_helpers.py", directory: "/opt/conda/lib/python3.10/site-packages/torch/_inductor")
!24 = !DILocation(line: 34, column: 41, scope: !22)
!25 = !DILocation(line: 36, column: 13, scope: !7)
!26 = !DILocation(line: 37, column: 19, scope: !7)
!27 = !DILocation(line: 38, column: 19, scope: !7)
!28 = !DILocation(line: 39, column: 19, scope: !7)
!29 = !DILocation(line: 40, column: 20, scope: !7)
!30 = !DILocation(line: 41, column: 19, scope: !7)
!31 = !DILocation(line: 29, column: 18, scope: !7)
!32 = !DILocation(line: 31, column: 18, scope: !7)
!33 = !DILocation(line: 35, column: 19, scope: !7)
!34 = !DILocation(line: 26, column: 18, scope: !7)
!35 = !DILocation(line: 28, column: 18, scope: !7)
!36 = !DILocation(line: 42, column: 20, scope: !7)
!37 = !DILocation(line: 27, column: 29, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "standard.py", directory: "/opt/conda/lib/python3.10/site-packages/triton/language")
!40 = !DILocation(line: 43, column: 23, scope: !38)
!41 = !DILocation(line: 27, column: 20, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 27, column: 16, scope: !38, inlinedAt: !40)
!43 = !DILocation(line: 44, column: 20, scope: !7)
!44 = !DILocation(line: 45, column: 19, scope: !7)
!45 = !DILocation(line: 46, column: 20, scope: !7)
!46 = !DILocation(line: 47, column: 20, scope: !7)
!47 = !DILocation(line: 48, column: 19, scope: !7)
!48 = !DILocation(line: 49, column: 20, scope: !7)
!49 = !DILocation(line: 50, column: 20, scope: !7)
!50 = !DILocation(line: 51, column: 20, scope: !7)
!51 = !DILocation(line: 52, column: 19, scope: !7)
!52 = !DILocation(line: 53, column: 25, scope: !7)
!53 = !DILocation(line: 53, column: 37, scope: !7)
!54 = !DILocation(line: 53, column: 4, scope: !7)

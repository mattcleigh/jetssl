; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d23(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !5 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %6 = and i32 %5, 1, !dbg !8
  %7 = zext nneg i32 %6 to i64, !dbg !9
  %8 = getelementptr float, ptr addrspace(1) %1, i64 %7, !dbg !9
  %9 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %8, i1 true, i32 0, i1 true) #3, !dbg !10
  %10 = bitcast i32 %9 to float, !dbg !10
  %11 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %9, i32 1, i32 31), !dbg !11
  %12 = bitcast i32 %11 to float, !dbg !11
  %13 = fadd float %10, %12, !dbg !15
  %14 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %13, float 1.159600e+04) #3, !dbg !19
  tail call void @llvm.nvvm.barrier0(), !dbg !20
  %15 = and i32 %5, 63, !dbg !21
  %16 = icmp eq i32 %15, 0, !dbg !21
  %17 = bitcast float %14 to i32, !dbg !21
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %17, ptr addrspace(1) %0, i1 %16) #3, !dbg !21
  ret void, !dbg !22
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "ccjkgkw74ijzo2y6nitws3epxchtcduljdutwmxiype6rv6gvu6q.py", directory: "/tmp/torchinductor_leighm/cj")
!3 = !{ptr @triton__0d1d23, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d23, !"maxntidx", i32 64}
!5 = distinct !DISubprogram(name: "triton__0d1d23", linkageName: "triton__0d1d23", scope: !2, file: !2, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 25, column: 34, scope: !5)
!9 = !DILocation(line: 28, column: 30, scope: !5)
!10 = !DILocation(line: 28, column: 35, scope: !5)
!11 = !DILocation(line: 243, column: 36, scope: !12, inlinedAt: !14)
!12 = distinct !DILexicalBlockFile(scope: !5, file: !13, discriminator: 0)
!13 = !DIFile(filename: "standard.py", directory: "/opt/conda/lib/python3.10/site-packages/triton/language")
!14 = !DILocation(line: 31, column: 24, scope: !12)
!15 = !DILocation(line: 233, column: 15, scope: !16, inlinedAt: !17)
!16 = distinct !DILexicalBlockFile(scope: !12, file: !13, discriminator: 0)
!17 = !DILocation(line: 243, column: 36, scope: !16, inlinedAt: !18)
!18 = !DILocation(line: 31, column: 24, scope: !16)
!19 = !DILocation(line: 33, column: 18, scope: !5)
!20 = !DILocation(line: 34, column: 4, scope: !5)
!21 = !DILocation(line: 35, column: 70, scope: !5)
!22 = !DILocation(line: 35, column: 4, scope: !5)
